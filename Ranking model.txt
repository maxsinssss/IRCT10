import lightgbm as lgb
import numpy as np
from sklearn.metrics import ndcg_score

# Generate reproducible dataset
np.random.seed(42)
X = np.random.rand(10, 5)  # 10 documents, 5 features
y = np.random.randint(0, 5, 10)  # Relevance scores (0â€“4)
group = [5, 5]  # 2 queries, 5 docs each

# Check feature standard deviation
print("Feature std devs:", np.std(X, axis=0))

# Create LightGBM Dataset
train_data = lgb.Dataset(X, label=y, group=group)

params = {
    'objective': 'lambdarank',
    'metric': 'ndcg',
    'ndcg_eval_at': [1, 3],
    'learning_rate': 0.1,
    'min_data_in_leaf': 1,
    'min_data_in_bin': 1,
    'verbose': -1
}

# Train model
model = lgb.train(params, train_data, num_boost_round=50)

# Predict & evaluate
y_pred = model.predict(X)
ndcg = ndcg_score([y[:5], y[5:]], [y_pred[:5], y_pred[5:]])
print("NDCG Score:", ndcg)
